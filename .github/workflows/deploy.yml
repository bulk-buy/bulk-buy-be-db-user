name: Deploy to ECR

on:
  milestone:
    types: [closed]
  workflow_dispatch: {}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'

    - name: Install MongoDB 4.4.x
      run: |
        wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list
        sudo apt-get update
        sudo apt-get install -y mongodb-org

    - name: Start MongoDB Service
      run: |
        sudo systemctl start mongod
        sudo systemctl status mongod

    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
      env:
        NODE_ENV: test

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: bulkbuy
        IMAGE_TAG: bulkbuy-be-user
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Restart EKS deployments and pods
      id: eks-control
      uses: nikosch86/github-action-eks-kubectl@main
      with:
        command: "rollout restart deployment/eks-web-deployment-user -n webapp"
      env:
        EKS_CLUSTER: BulkBuy-EKSClusterWeb1
